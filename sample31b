TOUCH, CAT, VI
================
touch file1 (create a file)
ls (list of files present in that directory)
touch file2,file3, file4 (create multiple files)

CAT
----
cat > file1 (create a file and enter into that file)
...
...
ctrl+D (to save data to the file1)

cat file1 (display the data from file1)
cat >> file1 (if we already have data in file1, we can append the data)


VI EDITOR (VIEW EDITOR)
-----------------------
vi file1 (go into file1 and add any information)
esc i (to enter insert mode)
...
...
esc:w (only to save the information you entered)
esc:q (to quit..come out of the file1)
esc:wq! (save the information and quit)



=============
GIT
=============
git init
git config --global user.name "Polarapu Prasad"
git config --global user.email "devopstraining2015@gmail.com"

git config --list

touch prasad
ls
git status
git add prasad
git status
git commit -m "1st commit" prasad
git status
git log
git show cid
---------------------------
touch file2 file3 file4 file5
ls
git status
git add file2 file3 file4 file5
or
git add .
or
git add *
or
git add -A
git status
git commit -m "label"


git reset --soft cid  (local to staging)
git reset head file-name (staging to workspace)
git reset --mixed cid  (local to workspace)
git reset --hard cid (it will delete files and log's)



git clone https://github.com/polarapu/batch66.git
ls
cd batch66
touch file1
git status
git add .
git status
git commit -m "test commit" file1
git status
git push
git pull --rebase



mkdir name-dir
mkdir prasad-dir
cd prasad-dir
touch f1 f2 f3
cd ..
git add *
git commit -m "label"
git push
git pull --rebase
git push


====================
git log's
-----------

git log
git log -n
git log --oneline
git log --oneline -n
git log --author=prasad
git log --author=prasad -n
git log --author=prasad --oneline
git log --author=prasad --oneline -n

git log --since=2021-04-22
or
git log --after="yy-mm-dd"

git log --until=yy-mm-dd
or
git log --before="yy-mm-dd"

git log --since=yy-mm-dd --until=yy-mm-dd
or
git log --after="yy-mm-dd" --before="yy-mm-dd"

git log --after="yy-mm-dd 00:00" --before="yy-mm-dd 00:00"

git log --grep="label"

git log -- file-name


============================
BRANCH
---------

$ git branch (Displays all the branches in local repository)

$ git branch -r (Displays all the remote branches i.e., from central repository => git hub)

$ git branch -a (Displays all the branches from both local and central repositories)

$ git checkout -b origin/<branch-name> (if we cant find branches in our local machine (but we can see those branches in central repository), 
hit this twice to change to a branch)

git branch (list all the available branches)

git branch branch-name => git branch release1 (create a branch with the name "release1")

git checkout branch-name (to change from one branch to another.....e.g. if we want to change to Release1 branch from Gowtam branch => git checkout Release1)

git merge branch-name (all commits are copied)

git cherry-pick cID (only a specific commit will be copied to a specific branch)

git push origin <branch-name> (to push the branch to central repository)
or
git push path/of/central-repo branch-name

git branch -d branch-name (to delete a branch in local)

git push origin -d branch-name (to delete a branch in central)

